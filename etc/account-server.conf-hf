[DEFAULT]
devices = /swift/node
mount_check = true
bind_port = 6012
user = swift
log_facility = LOG_LOCAL1
workers = auto

# Maximum concurrent requests per worker
# max_clients = 1024

db_preallocation = on
 
[pipeline:main]
pipeline = healthcheck xprofile recon account-server

[filter:recon]
use = egg:swift#recon
# recon_cache_path = /var/cache/swift


[filter:healthcheck]
use = egg:swift#healthcheck
# An optional filesystem path, which if present, will cause the healthcheck
# URL to return "503 Service Unavailable" with a body of "DISABLED BY FILE"
# disable_path =

[app:account-server]
use = egg:swift#account
 
[account-replicator]
concurrency=2

[account-auditor]
concurrency=1

[account-reaper]
concurrency=1

[filter:xprofile]
use = egg:swift#xprofile
# This option enable you to switch profilers which should inherit from python
# standard profiler. Currently the supported value can be 'cProfile',
# 'eventlet.green.profile' etc.
# profile_module = eventlet.green.profile
#
# This prefix will be used to combine process ID and timestamp to name the
# profile data file.  Make sure the executing user has permission to write
# into this path (missing path segments will be created, if necessary).
# If you enable profiling in more than one type of daemon, you must override
# it with an unique value like: /var/log/swift/profile/account.profile
log_filename_prefix = /var/log/swift/profile/account.profile
#
# the profile data will be dumped to local disk based on above naming rule
# in this interval.
dump_interval = 5.0
#
# Be careful, this option will enable profiler to dump data into the file with
# time stamp which means there will be lots of files piled up in the directory.
# dump_timestamp = false
#
# This is the path of the URL to access the mini web UI.
path = /__profile__
#
# Clear the data when the wsgi server shutdown.
# flush_at_shutdown = false
#
# unwind the iterator of applications
# unwind = false
